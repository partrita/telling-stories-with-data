name: Render Quarto PDFs and Release

on:
  push:
    branches:
      - main # Or your default branch
    paths:
      - 'translated_korean_files/**.qmd'
  workflow_dispatch: # Allows manual triggering

jobs:
  render_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create a release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Quarto
        uses: quarto-dev/quarto-cli-action@v2

      - name: Render QMD files to PDF
        run: |
          mkdir -p release_pdfs
          for file in translated_korean_files/*_ko.qmd; do
            if [ -f "$file" ]; then
              # Ensure output filename is valid and doesn't contain problematic characters
              filename=$(basename "${file%.qmd}")
              sanitized_filename=$(echo "$filename" | sed 's/[^a-zA-Z0-9_-]/_/g')
              quarto render "$file" --to pdf -o "release_pdfs/${sanitized_filename}.pdf"
              echo "Rendered $file to release_pdfs/${sanitized_filename}.pdf"
            else
              echo "File $file not found."
            fi
          done
          echo "Listing contents of release_pdfs:"
          ls -l release_pdfs/
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}-${{ github.sha }} # More unique tag name
          release_name: Release ${{ github.run_number }} (Korean PDFs)
          draft: false
          prerelease: false

      - name: Upload PDF assets to Release
        if: ${{ success() && steps.create_release.outputs.upload_url != '' }}
        run: |
          echo "Uploading PDFs from release_pdfs directory..."
          ls -l release_pdfs/
          for pdf_file in release_pdfs/*.pdf; do
            if [ -f "$pdf_file" ]; then
              echo "Uploading $pdf_file"
              gh release upload v${{ github.run_number }}-${{ github.sha }} "$pdf_file" --clobber
            else
              echo "PDF file $pdf_file not found for upload."
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
